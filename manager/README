-----------------------------
Description of manager class:
-----------------------------

Provides the interface between config file and MaCh3. The manager uses libconfig. The libconfig library can be found in MaCh3/libconfig/ and includes examples of different implmentations and the source code. There's also good documentation online.

The MaCh3 config files contain options for e.g. what samples to include, where covariances are located, and what systematics to include. Examples exist in the top directory as well as in this directory (README.cfg)

To get functions outside of the class implementation simply create a manager instance and do fitMan->getOutputFileName(), see executables in src/ or explanations in doc/ for examples.

The current interface follows the general MaCh3 layout of get... and set... functions, so please respect this convention. All functions are available in the header file, with implementations in cpp file.


If you give an invalid option, libconfig will start its exception handling. All libconfig exceptions are currently caught. Libconfig recommends to not store char*, so use strings if you can.


Current options are (18 March 2016):

-----------------------------------------------------------------------------------------------
Explanation               Example                             Default
-----------------------------------------------------------------------------------------------
Output filename           OUTPUTNAME = "yourOutput.root"      "mach3_output_file_default_name.root"

Run options:
  POT                     POT = 7.00E20                       3.01E20
  NuBar POT               NUBARPOT = 7.00E20                  3.01E20
  Live Time (days)        LIVETIME = 365.25                   1417.4

MCMC options:
  Number of Steps         NSTEPS = 50000                      10
  Step Scale              STEPSCALE = 0.01                    1
  Flux step Scale         STEPSCALEFLUX = 0.01                1
  Xsec step Scale         STEPSCALEXSEC = 0.01                1
  Near det step Scale     STEPSCALENEARDET = 0.01             1
  Far det step Scale      STEPSCALEFARDET = 0.01              1
  Oscillation Step Scale  OSCSTEPSCALE = 0.01                 0.1
  Annealing temperature   TEMP = 4 or T = 4                   -1 (off)
  Debug mode              SUMMARY = false                     true
  Seed                    SEED = 42                           0

Hardware options:
  GPU ON?                 GPUON = true                        false
  CPU MP on?              CPUMPON = true                      false

Fitting options:
  Fake data               FAKEDATAFIT = true                  false
  Real data               REALDATAFIT = true                  false
  Asimov                  ASIMOVFIT = true                    false
  Asimov on ND            NDASIMOV = true                     false
  Toy study               TOYFIT = true                       false

Toy/Fake data settings:
  Number of toys          NTOY = 200                          10
  Toy location            TOYFILE = "~/myToy.root"
  Data location           DATAFILE = "~/myData.root"

Systematics:
  Statistics only         STATONLY = true                     false

  Near Detector:
    Near detector cov file        NEARDETCOVFILE = "~/MyNearDetector.root"      "inputs/nd280_detector_fgd1fgd2_numucorr_bigmc.root"
    Near detector matrix name     NEARDETCOVNAME = "near_det_cov"         "near_det_cov"  
    Include systematics   NEARDETSYSTOPT = true                 true
    Flat parameters       NDDETPARAMFLAT = [0, 52, 10]        empty std::vector<int> 
    Fixed parameters      NDPARAMFIX = [1, 20, 30]            empty std::vector<int>

  Far Detector:
    Far detector cov file           FARDETCOVFILE = "~/MyFarDet.root"
    Far matrix name        FARDETCOVNAME = "far_det_cov"         ""
  Include systematics     FARDETSYSTOPT = true                 true
    Flat parameters       FARDETPARAMFLAT = [0, 52, 10]        empty std::vector<int> 
    Fixed parameters      FARPARAMFIX = [1, 20, 30]            empty std::vector<int>
  Flux:
    Flux cov file         FLUXCOVFILE = "~/myFluxCov.root"   ""
    Flux matrix name      FLUXCOVNAME = "flux_cov"           "total_flux_cov"    
    Include systematics   FLUXSYSTOPT = true                  true
    Flat parameters       FLUXPARAMFLAT = [0, 20, 99]         empty std::vector<int>
    Fixed parameters      FLUXPARAMFIX = [2, 33]              empty std::vector<int>

  Cross-section:
    x-sec cov file        XSECCOVFILE = "~/myXsecCov.root"   ""
    x-sec matrix name     XSECCOVNAME = "xsec_cov"    	     "xsec_cov"    
    Include systematics   XSECSYSTOPT = true                  true
    Flat Parameters       XSECPARAMFLAT = [0, 26]             empty std::vector<int>
    Fixed Parameters      XSECPARAMFIX = [1 ,2, 4]            empty std::vector<int>

  Oscillation:
    Fit doubled angle     DOUBLEANGLE=true		      false
    Apply bin per bin     BINNEDOSC=true		      false
    Bins if binned osc    OSCBINS=[0., 0.5, 1.0....]
    Use reactor priors    USERC = true                        false
    Input parameters      OSCPARAM = [0.304, 0.528, 0.0217, 7.53e-5, 2.509e-3, -1.601]
    Input parameters (2)  OSCPARAMRHC = [0.304, 0.528, 0.0217, 7.53e-5, 2.509e-3, -1.601]
    Input Asimov params	  OSCPARAM_ASIMOVINPUT = [0.304, 0.528, 0.0217, 7.53e-5, 2.509e-3, -1.601]
    Parameters to fit     OSCPARAMEVAL = [1,2,4,5]
    Osc cov file          OSCCOVFILE ="~/myOsc.root"         "inputs/oscillation_covariance_6par_nondouble.root"
    Osc matrix name       OSCCOVNAME = "osc_cov"	     "osc_cov"
    Osc cov file   anu    OSCCOVFILE_ANTINU ="~/myOsc2.root" 
    Osc matrix name anu   OSCCOVNAME_ANTINU = "osc_cov"	     
    Flat Parameters       OSCPARAMFLAT = [0,3]                empty std::vector<int>
    Fixed Parameters      OSCPARAMFIX = [2,5]                 empty std::vector<int>
    Flat Parameters anu   OSCPARAMFLAT_ANTINU = [0,3]         empty std::vector<int>
    Fixed Parameters anu  OSCPARAMFIX_ANTINU = [2,5]          empty std::vector<int>
    Use beta 	          USEBETA = true	       	      false
    Non-continuous beta	  FLIPBETA = true		          false
    Use beta in Pnue	  APPLYBETANUE = true		      false
    Use diagonal beta	  APPLYBETADIAG = true		      false
